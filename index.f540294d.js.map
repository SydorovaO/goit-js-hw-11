{"mappings":"AAKA,MAAMA,EAAmB,ICFV,MAMbC,cACE,MAAMC,EAAM,qEAAgCC,KAAKC,4EAA4ED,KAAKE,oBAClI,OAAOC,MAAMJ,GACVK,MAAKC,GAAOA,EAAIC,SAChBF,MAAK,EAACG,KAAEA,MACPP,KAAKQ,gBACED,I,CAGbC,gBACER,KAAKE,MAAQ,C,CAEfO,YACET,KAAKE,KAAO,C,CAEVQ,YACF,OAAOV,KAAKC,W,CAEVS,UAAMC,GACRX,KAAKC,YAAcU,C,CAxBrBC,cACEZ,KAAKE,KAAO,EACZF,KAAKC,YAAc,E,GDAjBY,EAAc,IENL,MAMbC,SACEd,KAAKe,OAAOC,UAAW,EACvBhB,KAAKe,OAAOE,YAAc,W,CAE5BC,UACElB,KAAKe,OAAOC,UAAW,EACvBhB,KAAKe,OAAOE,YAAc,Y,CAE5BE,OACEnB,KAAKe,OAAOK,UAAUC,OAAO,S,CAE/BC,OACEtB,KAAKe,OAAOK,UAAUG,IAAI,S,CAjB5BX,aAAYY,SAAEA,EAAQC,SAAEA,GAAW,IACjCzB,KAAKe,OAASW,SAASC,cAAcH,GACrCC,GAAYzB,KAAKsB,M,GFGe,CAClCE,SAAU,aACVC,UAAU,IAENG,EAAO,CACXC,KAAMH,SAASC,cAAc,gBAC7BG,QAASJ,SAASC,cAAc,YAChCI,YAAaL,SAASC,cAAc,eAwBtC,SAASK,IACPnB,EAAYK,UACZrB,EACGC,cACAM,MAAKG,IACJ0B,QAAQC,IAAI3B,GACZqB,EAAKE,QAAQK,mBAAmB,YAAaC,EAAa7B,IAC1DM,EAAYC,QAAQ,IAErBuB,MAAMC,GACNC,SAAQ,KACPX,EAAKC,KAAKW,OAAO,G,CAIvB,SAASJ,EAAaK,GACpB,OAAOA,EACJC,KACC,EAACC,KAAEA,EAAIC,aAAEA,EAAYC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KAAgB,qDAEnDJ,WAAsBD,gKAGmBE,wHAGCC,0HAGEC,2HAGCC,qEAM1DC,KAAK,G,CAMV,SAASX,EAAQY,GACfjB,QAAQkB,MAAMD,GACdd,EAAa,MAAMc,EAAIE,c,CAnEzBxB,EAAKC,KAAKwB,iBAAiB,UAI3B,SAAkBC,GAIhB,GAHAA,EAAEC,iBACF1C,EAAYM,OACZtB,EAAiBa,MAAQkB,EAAKC,KAAK2B,SAASvD,YAAYwD,MAAMC,OAC/B,KAA3B7D,EAAiBa,MAEnB,YADAiD,MAAM,gBAsDR/B,EAAKE,QAAQ8B,UAAY,GAlDzB/D,EAAiBY,YACjBuB,G,IAbFJ,EAAKG,YAAYsB,iBAAiB,SAgBlC,WACErB,G","sources":["src/index.js","src/js/img-search.js","src/components/loadMoreBtn.js"],"sourcesContent":["import axios from 'axios';\n\nimport SearchAPIService from './js/img-search';\nimport LoadMoreBtn from './components/loadMoreBtn';\n\nconst searchAPIService = new SearchAPIService();\nconst loadMoreBtn = new LoadMoreBtn({\n  selector: '.load-more',\n  isHidden: true,\n});\nconst refs = {\n  form: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\nrefs.loadMoreBtn.addEventListener('click', onLoadMore);\n// let inputValue = '';\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  loadMoreBtn.show();\n  searchAPIService.query = refs.form.elements.searchQuery.value.trim();\n  if (searchAPIService.query === '') {\n    alert('Empty query!');\n    return;\n  }\n  clearNewsList();\n  searchAPIService.resetPage();\n  appendImages();\n}\n\nfunction onLoadMore() {\n  appendImages();\n}\n\nfunction appendImages() {\n  loadMoreBtn.disable();\n  searchAPIService\n    .fetchImages()\n    .then(hits => {\n      console.log(hits);\n      refs.gallery.insertAdjacentHTML('beforeend', createMarkup(hits));\n      loadMoreBtn.enable();\n    })\n    .catch(onError)\n    .finally(() => {\n      refs.form.reset();\n    });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ tags, webformatURL, likes, views, comments, downloads }) => `\n      <div class=\"photo-card\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=350 height=197 />\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b class=\"info-desc\"><span >Likes</span> <span>${likes}</span></b>\n        </p>\n        <p class=\"info-item\">\n          <b class=\"info-desc\"><span >Views</span> <span >${views}</span></b>\n        </p>\n        <p class=\"info-item\">\n          <b class=\"info-desc\"><span >Comments</span> <span>${comments}</span></b>\n        </p>\n        <p class=\"info-item\">\n          <b class=\"info-desc\"><span >Downloads</span> <span>${downloads}</span></b>\n        </p>\n      </div>\n    </div>\n          `\n    )\n    .join('');\n}\n\nfunction clearNewsList() {\n  refs.gallery.innerHTML = '';\n}\nfunction onError(err) {\n  console.error(err);\n  createMarkup(`<p>${err.message}</p>`);\n}\n// axios.get('/users')\n//   .then(res => {\n//     console.log(res.data);\n//   });\n// const axios = require('axios');\n\n// // Делаем запрос пользователя с данным ID\n// axios.get('/user?ID=12345')\n//   .then(function (response) {\n//     // обработка успешного запроса\n//     console.log(response);\n//   })\n//   .catch(function (error) {\n//     // обработка ошибки\n//     console.log(error);\n//   })\n//   .finally(function () {\n//     // выполняется всегда\n//   });\n\n// // По желанию вышеуказанный запрос можно выполнить так\n// axios.get('/user', {\n//     params: {\n//       ID: 12345\n//     }\n//   })\n//   .then(function (response) {\n//     console.log(response);\n//   })\n//   .catch(function (error) {\n//     console.log(error);\n//   })\n//   .finally(function () {\n//     // выполняется всегда\n//   });\n\n// // Хотите использовать async/await? Добавьте ключевое слово `async` к своей внешней функции/методу.\n// async function getUser() {\n//   try {\n//     const response = await axios.get('/user?ID=12345');\n//     console.log(response);\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n","const API_KEY = '37102228-8afdc053099dfecff6bc66ec6';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport default class SearchAPIService {\n  constructor() {\n    this.page = 1;\n    this.searchQuery = '';\n  }\n\n  fetchImages() {\n    const url = `${BASE_URL}?key=${API_KEY}&q=${this.searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&page=${this.page}&per_page=100`;\n    return fetch(url)\n      .then(res => res.json())\n      .then(({ hits }) => {\n        this.incrementPage();\n        return hits;\n      });\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n  resetPage() {\n    this.page = 1;\n  }\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","export default class LoadMoreBtn {\n  constructor({ selector, isHidden = false }) {\n    this.button = document.querySelector(selector);\n    isHidden && this.hide();\n  }\n\n  enable() {\n    this.button.disabled = false;\n    this.button.textContent = 'Load more';\n  }\n  disable() {\n    this.button.disabled = true;\n    this.button.textContent = 'Loading...';\n  }\n  show() {\n    this.button.classList.remove('hidden');\n  }\n  hide() {\n    this.button.classList.add('hidden');\n  }\n}\n"],"names":["$1f0dc3b9307be026$var$searchAPIService","fetchImages","url","this","searchQuery","page","fetch","then","res","json","hits","incrementPage","resetPage","query","newQuery","constructor","$1f0dc3b9307be026$var$loadMoreBtn","enable","button","disabled","textContent","disable","show","classList","remove","hide","add","selector","isHidden","document","querySelector","$1f0dc3b9307be026$var$refs","form","gallery","loadMoreBtn","$1f0dc3b9307be026$var$appendImages","console","log","insertAdjacentHTML","$1f0dc3b9307be026$var$createMarkup","catch","$1f0dc3b9307be026$var$onError","finally","reset","arr","map","tags","webformatURL","likes","views","comments","downloads","join","err","error","message","addEventListener","e","preventDefault","elements","value","trim","alert","innerHTML"],"version":3,"file":"index.f540294d.js.map"}