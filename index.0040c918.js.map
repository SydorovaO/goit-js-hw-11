{"mappings":"AAGA,MAAMA,EAAmB,ICAV,MAMbC,YACE,MAAMC,EAAM,qEAAgCC,KAAKC,4EAA4ED,KAAKE,kBAClI,OAAOC,MAAMJ,GACVK,MAAKC,GAAOA,EAAIC,SAChBF,MAAKG,IACJP,KAAKQ,gBACED,EAAKE,O,CAGlBD,gBACER,KAAKE,MAAQ,C,CAEfQ,YACEV,KAAKE,KAAO,C,CAEVS,YACF,OAAOX,KAAKC,W,CAEVU,UAAMC,GACRZ,KAAKC,YAAcW,C,CAxBrBC,cACEb,KAAKE,KAAO,EACZF,KAAKC,YAAc,E,GDDjBa,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,YAChCE,YAAaH,SAASC,cAAc,eAGtCH,EAAKC,KAAKK,iBAAiB,UAI3B,SAAkBC,GAChBA,EAAEC,iBACFzB,EAAiBc,MAAQG,EAAKC,KAAKQ,SAAStB,YAAYuB,MACxD3B,EAAiBa,YACjBe,G,IAPFX,EAAKK,YAAYC,iBAAiB,SASlC,WACEK,G,IA4BF,SAASA,IACP5B,EAAiBC,YAAYM,MAAKK,IAChCiB,QAAQC,IAAIlB,GACZK,EAAKI,QAAQU,mBAAmB,YAA0BnB,EA1BzDoB,KACC,EAACC,KAAEA,EAAIC,aAAEA,EAAYC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KAAgB,qDAEnDJ,WAAsBD,gKAGmBE,wHAGCC,0HAGEC,2HAGCC,qEAM1DC,KAAK,IAK0D,G","sources":["src/index.js","src/js/data-search.js"],"sourcesContent":["import axios from 'axios';\n\nimport SearchAPIService from './js/data-search';\nconst searchAPIService = new SearchAPIService();\n\nconst refs = {\n  form: document.querySelector('#search-form'),\n  gallery: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\nrefs.loadMoreBtn.addEventListener('click', onLoadMore);\nlet inputValue = '';\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  searchAPIService.query = refs.form.elements.searchQuery.value;\n  searchAPIService.resetPage();\n  appendImages();\n}\nfunction onLoadMore() {\n  appendImages();\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ tags, webformatURL, likes, views, comments, downloads }) => `\n      <div class=\"photo-card\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" width=350 height=197 />\n      <div class=\"info\">\n        <p class=\"info-item\">\n          <b class=\"info-desc\"><span >Likes</span> <span>${likes}</span></b>\n        </p>\n        <p class=\"info-item\">\n          <b class=\"info-desc\"><span >Views</span> <span >${views}</span></b>\n        </p>\n        <p class=\"info-item\">\n          <b class=\"info-desc\"><span >Comments</span> <span>${comments}</span></b>\n        </p>\n        <p class=\"info-item\">\n          <b class=\"info-desc\"><span >Downloads</span> <span>${downloads}</span></b>\n        </p>\n      </div>\n    </div>\n          `\n    )\n    .join('');\n}\nfunction appendImages() {\n  searchAPIService.fetchInfo().then(hits => {\n    console.log(hits);\n    refs.gallery.insertAdjacentHTML('beforeend', createMarkup(hits));\n  });\n}\n\n// axios.get('/users')\n//   .then(res => {\n//     console.log(res.data);\n//   });\n// const axios = require('axios');\n\n// // Делаем запрос пользователя с данным ID\n// axios.get('/user?ID=12345')\n//   .then(function (response) {\n//     // обработка успешного запроса\n//     console.log(response);\n//   })\n//   .catch(function (error) {\n//     // обработка ошибки\n//     console.log(error);\n//   })\n//   .finally(function () {\n//     // выполняется всегда\n//   });\n\n// // По желанию вышеуказанный запрос можно выполнить так\n// axios.get('/user', {\n//     params: {\n//       ID: 12345\n//     }\n//   })\n//   .then(function (response) {\n//     console.log(response);\n//   })\n//   .catch(function (error) {\n//     console.log(error);\n//   })\n//   .finally(function () {\n//     // выполняется всегда\n//   });\n\n// // Хотите использовать async/await? Добавьте ключевое слово `async` к своей внешней функции/методу.\n// async function getUser() {\n//   try {\n//     const response = await axios.get('/user?ID=12345');\n//     console.log(response);\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n","const API_KEY = '37102228-8afdc053099dfecff6bc66ec6';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport default class SearchAPIService {\n  constructor() {\n    this.page = 1;\n    this.searchQuery = '';\n  }\n\n  fetchInfo() {\n    const url = `${BASE_URL}?key=${API_KEY}&q=${this.searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&page=${this.page}&per_page=4`;\n    return fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.incrementPage();\n        return data.hits;\n      });\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n  resetPage() {\n    this.page = 1;\n  }\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n"],"names":["$1f0dc3b9307be026$var$searchAPIService","fetchInfo","url","this","searchQuery","page","fetch","then","res","json","data","incrementPage","hits","resetPage","query","newQuery","constructor","$1f0dc3b9307be026$var$refs","form","document","querySelector","gallery","loadMoreBtn","addEventListener","e","preventDefault","elements","value","$1f0dc3b9307be026$var$appendImages","console","log","insertAdjacentHTML","map","tags","webformatURL","likes","views","comments","downloads","join"],"version":3,"file":"index.0040c918.js.map"}